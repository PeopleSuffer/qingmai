<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.QingMai.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.QingMai.pojo.User">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="openid" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="have_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="write_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="city" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="sex" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="apply_manager_status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="integral" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="commission_rate" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="commission" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="province" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="country" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="headimgurl" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="role_manager" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="check_shipping_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, openid, nickname, password, have_code, write_code, city, sex,apply_manager_status, integral, commission_rate,
    commission, province, country, headimgurl, role, role_manager,check_shipping_id, update_time, create_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from qingmai_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from qingmai_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.QingMai.pojo.User">
    insert into qingmai_user (id, openid, nickname, 
      password, have_code, write_code, 
      city, sex,apply_manager_status, integral,
      commission_rate, commission, province, 
      country, headimgurl, role, role_manager,check_shipping_id,
      update_time, create_time)
    values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{haveCode,jdbcType=VARCHAR}, #{writeCode,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},#{applyManagerStatus,jdbcType=INTEGER}, #{integral,jdbcType=DECIMAL},
      #{commissionRate,jdbcType=DECIMAL}, #{commission,jdbcType=DECIMAL}, #{province,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{headimgurl,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{roleManager,jdbcType=INTEGER},#{checkShippingId,jdbcType=INTEGER},
        now(),now())
  </insert>
    <insert id="insertSelective" parameterType="com.QingMai.pojo.User">
        insert into qingmai_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="openid != null">
                openid,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="haveCode != null">
                have_code,
            </if>
            <if test="writeCode != null">
                write_code,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="applyManagerStatus != null">
                apply_manager_status,
            </if>
            <if test="integral != null">
                integral,
            </if>
            <if test="commissionRate != null">
                commission_rate,
            </if>
            <if test="commission != null">
                commission,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="country != null">
                country,
            </if>
            <if test="headimgurl != null">
                headimgurl,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="roleManager != null">
                role_manager,
            </if>
            <if test="checkShippingId != null">
                check_shipping_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="haveCode != null">
                #{haveCode,jdbcType=VARCHAR},
            </if>
            <if test="writeCode != null">
                #{writeCode,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="applyManagerStatus != null">
                #{applyManagerStatus,jdbcType=INTEGER},
            </if>
            <if test="integral != null">
                #{integral,jdbcType=DECIMAL},
            </if>
            <if test="commissionRate != null">
                #{commissionRate,jdbcType=DECIMAL},
            </if>
            <if test="commission != null">
                #{commission,jdbcType=DECIMAL},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                #{country,jdbcType=VARCHAR},
            </if>
            <if test="headimgurl != null">
                #{headimgurl,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            <if test="roleManager != null">
                #{roleManager,jdbcType=INTEGER},
            </if>
            <if test="checkShippingId != null">
                #{checkShippingId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                now(),
            </if>
            <if test="createTime != null">
                now(),
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.QingMai.pojo.User">
        update qingmai_user
        <set>
            <if test="openid != null">
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="haveCode != null">
                have_code = #{haveCode,jdbcType=VARCHAR},
            </if>
            <if test="writeCode != null">
                write_code = #{writeCode,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="applyManagerStatus != null">
                apply_manager_status = #{applyManagerStatus,jdbcType=INTEGER},
            </if>
            <if test="integral != null">
                integral = #{integral,jdbcType=DECIMAL},
            </if>
            <if test="commissionRate != null">
                commission_rate = #{commissionRate,jdbcType=DECIMAL},
            </if>
            <if test="commission != null">
                commission = #{commission,jdbcType=DECIMAL},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                country = #{country,jdbcType=VARCHAR},
            </if>
            <if test="headimgurl != null">
                headimgurl = #{headimgurl,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="roleManager != null">
                role_manager = #{roleManager,jdbcType=INTEGER},
            </if>
            <if test="checkShippingId != null">
                check_shipping_id = #{checkShippingId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.QingMai.pojo.User">
    update qingmai_user
    set openid = #{openid,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      have_code = #{haveCode,jdbcType=VARCHAR},
      write_code = #{writeCode,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      apply_manager_status = #{applyManagerStatus,jdbcType=INTEGER},
      integral = #{integral,jdbcType=DECIMAL},
      commission_rate = #{commissionRate,jdbcType=DECIMAL},
      commission = #{commission,jdbcType=DECIMAL},
      province = #{province,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      headimgurl = #{headimgurl,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      role_manager = #{roleManager,jdbcType=INTEGER},
      check_shipping_id = #{checkShippingId,jdbcType=INTEGER},
      update_time = now(),
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByOpenId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from qingmai_user
        where openid = #{openid,jdbcType=VARCHAR}
    </select>

    <select id="checkPassword" resultType="int" parameterType="map">
        SELECT
        count(1)
        from qingmai_user
        where password = #{password}
        and id = #{userId}
    </select>


    <select id="loginForAdmin" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from qingmai_user
        where nickname = #{nickname}
        and password = #{password}
    </select>

    <update id="IntegralPlusByPrimaryKey" parameterType="map">
        update qingmai_user
        <set>
            integral = integral + 1
        </set>
        where id = #{userId}
    </update>

    <select id="selectApplyRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from qingmai_user
        where apply_manager_status is not null
        order by update_time desc
    </select>

    <select id="selectManager" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from qingmai_user
        where have_code = #{code} and role_manager is not null
    </select>

    <select id="selectBigCuster" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from qingmai_user
        where write_code = #{code} and role = 2
    </select>

    <select id="selectAllUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from qingmai_user
    </select>

    <select id="selectManagerEnterprisePay" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from qingmai_user
        where role_manager is not null and commission > 5
    </select>

    <update id="updateWrite_code" parameterType="map">
        update  qingmai_user
        <set>
            write_code = #{toWriteCode}
        </set>
        where write_code = #{froWriteCode}
    </update>


</mapper>